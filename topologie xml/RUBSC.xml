<?xml version="1.0" encoding="utf-8"?>
<experiment boot="kollaps:2.0">
    <services>
        <!-- Dashboard pour le monitoring -->
        <service name="dashboard"   image="kollaps/dashboard:1.0"         supervisor="true" port="8088"/>

        <!-- Trois serveurs v1 au démarrage -->
        <service name="server1-v1"  image="kollaps/iperf3-network:1.0"    command="['server']"/>
        <service name="server2-v1"  image="kollaps/iperf3-network:1.0"    command="['server']"/>
        <service name="server3-v1"  image="kollaps/iperf3-network:1.0"    command="['server']"/>

        <!-- Trois serveurs v2, inactifs jusqu’à leur déploiement -->
        <service name="server1-v2"  image="kollaps/iperf3-network:1.0"    command="['server']"/>
        <service name="server2-v2"  image="kollaps/iperf3-network:1.0"    command="['server']"/>
        <service name="server3-v2"  image="kollaps/iperf3-network:1.0"    command="['server']"/>

        <!-- Quatre clients générant la charge -->
        <service name="client1"     image="kollaps/iperf3-network:1.0"    command="['1','4']"/>
        <service name="client2"     image="kollaps/iperf3-network:1.0"    command="['2','4']"/>
        <service name="client3"     image="kollaps/iperf3-network:1.0"    command="['3','4']"/>
        <service name="client4"     image="kollaps/iperf3-network:1.0"    command="['4','4']"/>
    </services>

    <bridges>
        <bridge name="br-backend"/>
    </bridges>

    <links>
        <!-- Liens entre clients et le bridge -->
        <link origin="client1"     dest="br-backend" latency="5"  upload="500Mbps" download="500Mbps" network="kollaps_network"/>
        <link origin="client2"     dest="br-backend" latency="5"  upload="500Mbps" download="500Mbps" network="kollaps_network"/>
        <link origin="client3"     dest="br-backend" latency="5"  upload="500Mbps" download="500Mbps" network="kollaps_network"/>
        <link origin="client4"     dest="br-backend" latency="5"  upload="500Mbps" download="500Mbps" network="kollaps_network"/>

        <!-- Liens entre serveurs et le bridge -->
        <link origin="server1-v1"  dest="br-backend" latency="5"  upload="1Gbps"   download="1Gbps"   network="kollaps_network"/>
        <link origin="server2-v1"  dest="br-backend" latency="5"  upload="1Gbps"   download="1Gbps"   network="kollaps_network"/>
        <link origin="server3-v1"  dest="br-backend" latency="5"  upload="1Gbps"   download="1Gbps"   network="kollaps_network"/>
        <link origin="server1-v2"  dest="br-backend" latency="5"  upload="1Gbps"   download="1Gbps"   network="kollaps_network"/>
        <link origin="server2-v2"  dest="br-backend" latency="5"  upload="1Gbps"   download="1Gbps"   network="kollaps_network"/>
        <link origin="server3-v2"  dest="br-backend" latency="5"  upload="1Gbps"   download="1Gbps"   network="kollaps_network"/>
    </links>

    <dynamic>
        <!-- 0 s : tous les serveurs v1 et les clients rejoignent -->
        <schedule name="server1-v1" time="0.0"   action="join"/>
        <schedule name="server2-v1" time="0.0"   action="join"/>
        <schedule name="server3-v1" time="0.0"   action="join"/>
        <schedule name="client1"    time="0.0"   action="join"/>
        <schedule name="client2"    time="0.0"   action="join"/>
        <schedule name="client3"    time="0.0"   action="join"/>
        <schedule name="client4"    time="0.0"   action="join"/>

        <!-- 60 s : rolling upgrade de server1 -->
        <schedule name="server1-v1" time="60.0"  action="leave"/>
        <schedule name="server1-v2" time="60.0"  action="join"/>

        <!-- 120 s : rolling upgrade de server2 -->
        <schedule name="server2-v1" time="120.0" action="leave"/>
        <schedule name="server2-v2" time="120.0" action="join"/>

        <!-- 180 s : rolling upgrade de server3 -->
        <schedule name="server3-v1" time="180.0" action="leave"/>
        <schedule name="server3-v2" time="180.0" action="join"/>

        <!-- 240 s : crash et recovery de server2-v2 -->
        <schedule name="server2-v2" time="240.0" action="crash"/>
        <schedule name="server2-v2" time="270.0" action="join"/>

        <!-- 300 s : fin de l’expérience -->
        <schedule time="300.0" action="quit"/>
    </dynamic>
</experiment>

